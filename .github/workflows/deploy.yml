name: Deploy to Clojars

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  checks:
    name: Checks (format + tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest
          lein: 2.9.10
          bb: latest
          clj-kondo: 2023.05.18
          cljfmt: 0.10.4

      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            .cpcache
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Run cljfmt check
        run: cljfmt check

      - name: Run tests
        run: |
          clojure -T:build test


  deploy:
    name: Deploy to Clojars
    runs-on: ubuntu-latest
    needs: checks
    if: "contains(github.event.head_commit.message, '[skip deploy]') == false"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest
          lein: 2.9.10
          bb: latest
          clj-kondo: 2023.05.18
          cljfmt: 0.10.4

      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
            .cpcache
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t color-tools-deploy .

      - name: Deploy to Clojars
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        run: |
          docker run --rm \
            -e CLOJARS_USERNAME="$CLOJARS_USERNAME" \
            -e CLOJARS_PASSWORD="$CLOJARS_PASSWORD" \
            color-tools-deploy \
            clojure -T:build deploy